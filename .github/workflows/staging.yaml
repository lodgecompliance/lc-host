name: Staging Deployment
on:
  push:
    branches:
      - staging
jobs:
  test:
    environment: staging
    runs-on: ubuntu-latest
    steps:
      - name: Run test
        run: echo Test not available yet
  build:
    needs: [test]
    environment: staging
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 16.13.2 ]
    steps:
      - uses: actions/checkout@master
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install application dependencies
        run: npm install
      - name: Create environment
        run: |
          touch .env
          echo NODE_ENV='${{ vars.NODE_ENV }}' >> .env
          echo VUE_APP_ENV='${{ vars.APP_ENV }}' >> .env
          echo VUE_APP_NAME='${{ vars.APP_NAME }}' >> .env
          echo VUE_APP_URL='${{ vars.APP_URL }}' >> .env
          echo VUE_APP_LC_SDK='${{ vars.LC_SDK }}' >> .env
          echo VUE_APP_AUTH_DOMAIN='${{ vars.AUTH_DOMAIN }}' >> .env
          echo VUE_APP_API_BASE_URL='${{ vars.API_BASE_URL }}' >> .env
          echo VUE_APP_GOOGLE_API_KEY='${{ secrets.GOOGLE_API_KEY }}' >> .env
          echo VUE_APP_FIREBASE_API_KEY='${{ secrets.FIREBASE_API_KEY }}' >> .env
          echo VUE_APP_FIREBASE_DOMAIN='${{ secrets.FIREBASE_DOMAIN }}' >> .env
          echo VUE_APP_FIREBASE_PROJECT_ID='${{ secrets.FIREBASE_PROJECT_ID }}' >> .env
          echo VUE_APP_FIREBASE_STORAGE_BUCKET='${{ secrets.FIREBASE_STORAGE_BUCKET }}' >> .env
          echo VUE_APP_FIREBASE_MESSAGING_SENDER_ID='${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}' >> .env
          echo VUE_APP_FIREBASE_API_ID='${{ secrets.FIREBASE_API_ID }}' >> .env
          echo VUE_APP_FIREBASE_MEASUREMENT_ID='${{ secrets.FIREBASE_MEASUREMENT_ID }}' >> .env
          echo VUE_APP_GRAPHQL_GR_ENDPOINT='${{ vars.GRAPHQL_GR_ENDPOINT }}' >> .env
          echo VUE_APP_GRAPHQL_AUTH_ENDPOINT='${{ vars.GRAPHQL_AUTH_ENDPOINT }}' >> .env
          echo VUE_APP_GRAPHQL_ACCOUNT_ENDPOINT='${{ vars.GRAPHQL_ACCOUNT_ENDPOINT }}' >> .env
          echo VUE_APP_GRAPHQL_WALLET_ENDPOINT='${{ vars.GRAPHQL_WALLET_ENDPOINT }}' >> .env
          echo VUE_APP_GRAPHQL_CLIENT_KEY='${{ secrets.GRAPHQL_CLIENT_KEY }}' >> .env
      - name: Build application
        run: npm run build
      - name: Archive artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
  deploy:
    needs: [ build ]
    environment: staging
    runs-on: ubuntu-latest
    env:
      GOOGLE_APPLICATION_CREDENTIALS: service-account.json
    steps:
      - name: Checkout repo
        uses: actions/checkout@master
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Install Firebase CLI
        run: npm install -g firebase-tools
      - name: Create CI service account
        shell: bash
        run: |
          echo "${{ secrets.CI_SERVICE_ACCOUNT }}" | base64 --decode > "service-account.json"
      - name: Deploy to firebase
        run: firebase deploy --only hosting -P dev
      - name: Remove credentials file
        if: success() || failure()
        run: |
          rm service-account.json
